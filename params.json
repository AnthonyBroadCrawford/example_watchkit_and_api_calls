{"name":"Example Watchkit App & API calls","tagline":"A simple project illustrating how to have your watchkit extension (both Glance and App) interface with your iOS app to make a sucessful http api call to retrieve remote data","body":"### Why I created this\r\n\r\nI recently had to build a WatchKit app that connected to its parent app to retrieve remote data from an API. This should be a very simple and well documented use-case from Apple given almost 100% of WatchKit apps will do this. Unfortunately, what I found out, is that clear and concise documentation is lacking and there are a few pitfalls. \r\n\r\nSo no one else would have to waste a day or so researching exactly what you need to do in order to make an API call from within your AppDelegates handleWatchKitExtensionRequest, I felt it would be nice to document a working solution (Xcode 6.4 & iOS 8.4).\r\n\r\n### The dreaded Error Domain=com.apple.watchkit.errors Code=2\r\nWhen I first created my first WatchKit app I followed the instructions provided by Apple to the letter.  However, when I first started to fire up my WatchKit App I was receiving the infamous *Error Domain=com.apple.watchkit.errors Code=2* when the WatchKit app was calling into it's corresponding iOS app.\r\n\r\nIt didn't make any sense.  I \r\n\r\n- Implemented [WKInterfaceController.openParentApplication](http://apple.co/1hdBKYu) function call in the Glance controller\r\n- Implemented the [handleWatchKitExtensionRequest](http://apple.co/1LbSHw3) function in the iOS AppDelegate\r\n- Invoked the ```reply ``` closure to return back to the WatchKit app\r\n- Ensured I only returned the supported datatypes in my response \r\n\r\nYet I was still receiving the damned Error Domain=com.apple.watchkit.errors Code=2.  It was maddening.  \r\n\r\n### The superset of things I did to make the API calls successful \r\nUltimately, it was rather simple, and I got bit by \"one\" tiny thing (which is usually the case) but I thought it would be nice to document them and then provide a working example.\r\n\r\n- Call your iOS app from within WatchKit using [WKInterfaceController.openParentApplication](http://apple.co/1hdBKYu)\r\n\r\n- Handle requests from your WatchKit app in your iOS AppDelegate with [handleWatchKitExtensionRequest](http://apple.co/1LbSHw3)\r\n\r\n- Ensure in all scenarios you invoke the ```reply ``` closure even if you are returning ```nil ```\r\n\r\n- Ensure your iOS app can run in the background by making sure \"Application does not run in background\" is set to NO (who the hell uses a double negative??)\r\n\r\n- The first thing you do in your AppDelegates handleWatchKitExtensionRequest is register for background processing via ```application.beginBackgroundTaskWithName ```\r\n\r\n- The last thing you do in your AppDelegate's handleWatchKitExtensionRequest is terminate your background process application.endBackgroundTask\r\n\r\n\r\n### This solution covers\r\nThe Watchkit app covers\r\n\r\n- Properly preparing your iOS app to make a remote http api call when requested to do so via the WatchKit app\r\n- Properly communicate errors and data to the WatchKit app\r\n\r\n### This solution doesn't cover\r\nThread safety and multiple concurrent requests from the WatchKit app to the iOS parent via handleWatchKitExtensionRequest\r\n\r\n### The use-case\r\nI wanted a real, yet simple, use-case when building out this app. I chose to have the WatchKit app simply request the current weather forecaes from the [DarkSky API](https://developer.forecast.io/docs/forecast) via [Forecast.io](www.forecast.io)\r\n\r\nThe Watchkit app simply has a\r\n- Glance interface requesting remote data from iOS parent\r\n- Watch app requesting remote data from iOS parent\r\n\r\n### Alamofire\r\nTo simplify what this codebase must do, I've leveraged Alamofire to make any necessary HTTP calls\r\n\r\n### Authors and Contributors\r\n\r\nAt the moment, it's just me Anthony Broad-Crawford however, if you want to contribute, feel free to do so.\r\n\r\n### Support or Contact\r\n\r\nIf you have any questions please don't hesitate to contact me via Twitter at @broadcrawford or via email.","google":"UA-21851573-1","note":"Don't delete this file! It's used internally to help with page regeneration."}