{"name":"Example Watchkit App & API calls","tagline":"A simple project illustrating how to have your watchkit extension (both Glance and App) interface with your iOS app to make a sucessful http api call to retrieve remote data","body":"### Why I created this example\r\nI recently had to build a WatchKit app that connected to the parent app to retrieve data.  This should be a very simple and well documented scenario via Apple given that almost 100% of WatchKit apps will do this.  Unfortunately, what I found out, is that is indeed not the case.  \r\n\r\nNow having built a *few* apps that do this, I felt it would be nice to document a working solution (Xcode 6.4 & iOS 8.4) that shows how to \r\n\r\n- Properly prepare your iOS app to make a remote http api call when requested by the WatchKit app\r\n- Properly handle errors on both the iOS app and WatchKit sides of the call\r\n\r\n### What this example includes \r\nThis example covers the following use-cases\r\n\r\n- Glance interface requesting remote data from iOS parent\r\n- Watch app requesting remote data from iOS parent \r\n- AppDelegate handleWatchKitExtensionRequest properly orchestrating a remote http api calls\r\n\r\nI've additionally thrown in some XCTTests' for the code in the project.\r\n\r\n### Alamofire\r\nTo simplify what this codebase must do, I've leveraged Alamofire for making the necessary HTTP calls to a remove service.\r\n\r\n### Authors and Contributors\r\nAt the moment, it's just me Anthony Broad-Crawford however, if you want to contribute feel free to do so. \r\n\r\n### Support or Contact\r\nIf you have any questions please don't hesitate to contact me via Twitter at @broadcrawford or via email.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}